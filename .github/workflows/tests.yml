name: Test Automation Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        test-suite: [smoke, regression, integration]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run ${{ matrix.test-suite }} tests
      env:
        TEST_ENV: ci
        API_BASE_URL: https://jsonplaceholder.typicode.com
        PARALLEL_WORKERS: 4
      run: |
        pytest -m ${{ matrix.test-suite }} \
               --html=reports/report-${{ matrix.test-suite }}.html \
               --json-report --json-report-file=reports/report-${{ matrix.test-suite }}.json \
               --cov=src --cov-report=xml \
               --maxfail=5 \
               -n auto
    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ matrix.python-version }}-${{ matrix.test-suite }}
        path: reports/
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  performance:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run performance tests
      env:
        TEST_ENV: ci
        API_BASE_URL: https://jsonplaceholder.typicode.com
      run: |
        pytest -m performance \
               --html=reports/performance-report.html \
               --json-report --json-report-file=reports/performance-report.json \
               -v -s
    - name: Performance analysis
      run: |
        python scripts/analyze_performance.py reports/performance-report.json 